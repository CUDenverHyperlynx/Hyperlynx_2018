/*
   at 2 G acceleration, max agular acceleration should be 10.2343 rev/(sec^2)
*/

#define MAX_ANGULAR_ACCELERATION 10.2343

int count = 0, count_check, count_old, RPM_old, delay_time = 15;
int check = 0;
unsigned long time_taken = 0, time_check = 0;
double angular_v_last, angular_v;

void setup() {
  TCNT1 = 49911;
  TCCR1A = 0;
  TCCR1B = 0;
  TCCR1B |= ((1 << CS12) | (1 << CS10));          //set CS bits for timer 1 to 101 giving the clock a 1/1024 prescaler
  TIMSK1 |= (1 << TOIE1);                         //enable timer 1 interrupt to ovflow
  Serial.begin(9600);
  sei();
  attachInterrupt(digitalPinToInterrupt(3), detect, FALLING);   //tach signal attached to pin 3 active low signal so signal goes low to signal initial input
}

ISR(TIMER1_OVF_vect){
  int val = RPM_old + 640;
  if (val<angular_v){
    delay_time = delay_time + ((angular_v-val)/(count-count_old));
    }
  else
    delay_time = delay_time - ((angular_v - RPM_old)/(count-count_old));
  count_old=count;
  RPM_old=angular_v;
  }

void loop() {
  if (check == 1) {   //check variable only enables this loop function to run in between signals from tach, also prevents new data read in until a minimum delay has passed
    //unsigned long start = micros();
    time_taken = millis() - time_taken;                             //sutract time from end of calculations last cycle from time current time to get time between signals
    angular_v = (double)(1 / ((double)time_taken)) * 60000;   //RPM
    //angular_v = ((2 * 3.14159) / time_taken) * 1000;        //rads/sec
    Serial.print("RPM: ");
    Serial.println(angular_v, 6);
    //Serial.println(" radians per second");
    Serial.print("time/revolution: ");
    Serial.print(time_taken, DEC);                              //give a printout of the time between signals
    Serial.println(" miliseconds\n");
    time_taken = millis();                                    //store end time of current cycle calculations

    //unsigned long total = micros() - start;               //vestigial code used for timing monitoring, long delay in signal, ie 0.0001 RPM results in cacluation taking approximately 30 ms, typical 1 ms
    //Serial.print("time/process: ");
    //    Serial.print(total, DEC);
    //    Serial.println(" microseconds");

    delay(delay_time);                                            //under no conditions the signal should repeat more frequently than 14 ms or so
    angular_v_last = angular_v;
    time_check = millis();
    check = 0;
  }
}

void detect() {
  if (check == 0) {
    count++;
    Serial.print("\ncount: ");
    Serial.println(count, DEC);
    check = 1;
  }
}
